
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/chip_io/src/sky130_fd_io__top_power_lvc_wpad.v
Parsing SystemVerilog input from `/openLANE_flow/designs/chip_io/src/sky130_fd_io__top_power_lvc_wpad.v' to AST representation.
Generating RTLIL representation for module `\sky130_fd_io__top_power_lvc_wpad'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /home/roshan/Desktop/vsdflow/work/tools/openlane_working_dir/pdks/sky130A/libs.ref/sky130_fd_io/verilog/sky130_ef_io.v
Parsing SystemVerilog input from `/home/roshan/Desktop/vsdflow/work/tools/openlane_working_dir/pdks/sky130A/libs.ref/sky130_fd_io/verilog/sky130_ef_io.v' to AST representation.
Generating RTLIL representation for module `\sky130_ef_io__vccd_hvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vccd_lvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vdda_lvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vdda_hvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vddio_lvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vddio_hvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vssd_lvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vssd_hvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vssio_lvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vssio_hvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vssa_lvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__vssa_hvc_pad'.
Generating RTLIL representation for module `\sky130_ef_io__corner_pad'.
Generating RTLIL representation for module `\sky130_fd_io__com_bus_slice'.
Generating RTLIL representation for module `\sky130_ef_io__com_bus_slice_1um'.
Generating RTLIL representation for module `\sky130_ef_io__com_bus_slice_5um'.
Generating RTLIL representation for module `\sky130_ef_io__com_bus_slice_10um'.
Generating RTLIL representation for module `\sky130_ef_io__com_bus_slice_20um'.
Generating RTLIL representation for module `\sky130_ef_io__gpiov2_pad'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/chip_io/src/chip_io.v
Parsing SystemVerilog input from `/openLANE_flow/designs/chip_io/src/chip_io.v' to AST representation.
/openLANE_flow/designs/chip_io/src/chip_io.v:1: ERROR: syntax error, unexpected $end
